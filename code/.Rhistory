scale_fill_manual(values = c(wes_palettes$Darjeeling1, wes_palettes$Darjeeling2), limits = provClasses)
knitr::opts_chunk$set(echo = TRUE)
ggplot(providerComp, aes(x = "", y = numProv, fill = OrganizationTypeClassification)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
# geom_text(aes(label = paste0(perProv, "%")), color = "white", position = position_stack(vjust = 0.5)) +
labs(title = "Percent of provider organizations by classification", fill = "Provider Type", y ~ providerComp$perProv) +
scale_fill_manual(values = c(wes_palettes$Darjeeling1, wes_palettes$Darjeeling2), limits = provClasses)
ggplot(providerComp, aes(x = "", y = numProv, fill = OrganizationTypeClassification)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
geom_text(aes(label = paste0(perProv, "%")), color = "white", position = position_stack(vjust = 0.5)) +
labs(title = "Percent of provider organizations by classification", fill = "Provider Type") +
scale_fill_manual(values = c(wes_palettes$Darjeeling1, wes_palettes$Darjeeling2), limits = provClasses) +
theme_void()
knitr::opts_chunk$set(echo = TRUE)
ggplot(providerComp, aes(x = "", y = numProv, fill = OrganizationTypeClassification)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
geom_text(aes(label = paste0(perProv, "%")), color = "white", position = position_dodge(hjust = 0.5)) +
labs(title = "Percent of provider organizations by classification", fill = "Provider Type") +
scale_fill_manual(values = c(wes_palettes$Darjeeling1, wes_palettes$Darjeeling2), limits = provClasses) +
theme_void()
knitr::opts_chunk$set(echo = TRUE)
ggplot(providerComp, aes(x = "", y = numProv, fill = OrganizationTypeClassification)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
geom_text(aes(label = paste0(perProv, "%")), color = "white", position = position_stack(hjust = 0.5)) +
labs(title = "Percent of provider organizations by classification", fill = "Provider Type") +
scale_fill_manual(values = c(wes_palettes$Darjeeling1, wes_palettes$Darjeeling2), limits = provClasses) +
theme_void()
knitr::opts_chunk$set(echo = TRUE)
ggplot(providerComp, aes(x = "", y = numProv, fill = OrganizationTypeClassification)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
geom_text(aes(label = paste0(perProv, "%")), color = "white", position = position_stack(vjust = 0.7)) +
labs(title = "Percent of provider organizations by classification", fill = "Provider Type") +
scale_fill_manual(values = c(wes_palettes$Darjeeling1, wes_palettes$Darjeeling2), limits = provClasses) +
theme_void()
knitr::opts_chunk$set(echo = TRUE)
ggplot(providerComp, aes(x = "", y = numProv, fill = OrganizationTypeClassification)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
geom_text(aes(label = paste0(perProv, "%")), color = "white", position = position_stack(vjust = 0.5)) +
labs(title = "Percent of provider organizations by classification", fill = "Provider Type") +
scale_fill_manual(values = c(wes_palettes$Darjeeling1, wes_palettes$Darjeeling2), limits = provClasses) +
theme_void()
knitr::opts_chunk$set(echo = TRUE)
ggplot(providerComp, aes(x = "", y = numProv, fill = OrganizationTypeClassification)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
geom_text(aes(label = paste0(perProv, "%")), color = "black", position = vjust = 0.2) +
knitr::opts_chunk$set(echo = TRUE)
ggplot(providerComp, aes(x = "", y = numProv, fill = OrganizationTypeClassification)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
geom_text(aes(label = paste0(perProv, "%")), color = "black", vjust = 0.2) +
labs(title = "Percent of provider organizations by classification", fill = "Provider Type") +
scale_fill_manual(values = c(wes_palettes$Darjeeling1, wes_palettes$Darjeeling2), limits = provClasses) +
theme_void()
providerComp
knitr::opts_chunk$set(echo = TRUE)
providerComp <- providerComp %>% mutate(perProv = round(numProv*100/sum(numProv), 2),
perSites = round(numSites*100/sum(numSites), 2),
perInstances = round(numInstances*100/sum(numInstances), 2)) %>%
arrange(desc(numSites)) %>%
mutate(Provlabel = paste0(OrganizationTypeClassification, " - ", perProv, "%"),
Sitelabel = paste0(OrganizationTypeClassification, " - ", perSites, "%"),
Inslabel = paste0(OrganizationTypeClassification, " - ", perInstances, "%"))
providerComp
knitr::opts_chunk$set(echo = TRUE)
ggplot(providerComp, aes(x = "", y = numProv, fill = Provlabel)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
# geom_text(aes(label = paste0(perProv, "%")), color = "black", vjust = 0.2) +
labs(title = "Percent of provider organizations by classification", fill = "Provider Type") +
scale_fill_manual(values = c(wes_palettes$Darjeeling1, wes_palettes$Darjeeling2), limits = provClasses) +
theme_void()
knitr::opts_chunk$set(echo = TRUE)
ggplot(providerComp, aes(x = "", y = numProv, fill = Provlabel)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
# geom_text(aes(label = paste0(perProv, "%")), color = "black", vjust = 0.2) +
labs(title = "Percent of provider organizations by classification", fill = "Provider Type") +
scale_fill_manual(values = c(wes_palettes$Darjeeling1, wes_palettes$Darjeeling2), limits = provlabel) +
theme_void()
knitr::opts_chunk$set(echo = TRUE)
ggplot(providerComp, aes(x = "", y = numProv, fill = Provlabel)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
# geom_text(aes(label = paste0(perProv, "%")), color = "black", vjust = 0.2) +
labs(title = "Percent of provider organizations by classification", fill = "Provider Type") +
scale_fill_manual(values = c(wes_palettes$Darjeeling1, wes_palettes$Darjeeling2), limits = Provlabel) +
theme_void()
providerComp
knitr::opts_chunk$set(echo = TRUE)
ggplot(providerComp, aes(x = "", y = numProv, fill = Provlabel)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
# geom_text(aes(label = paste0(perProv, "%")), color = "black", vjust = 0.2) +
labs(title = "Percent of provider organizations by classification", fill = "Provider Type") +
scale_fill_manual(values = c(wes_palettes$Darjeeling1, wes_palettes$Darjeeling2), limits = providerComp$Provlabel) +
theme_void()
knitr::opts_chunk$set(echo = TRUE)
ggplot(arrange(providerComp, perProv), aes(x = "", y = numProv, fill = Provlabel)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
# geom_text(aes(label = paste0(perProv, "%")), color = "black", vjust = 0.2) +
labs(title = "Percent of provider organizations by classification", fill = "Provider Type") +
scale_fill_manual(values = c(wes_palettes$Darjeeling1, wes_palettes$Darjeeling2), limits = providerComp %>% arrange(perProv) %>% .$Provlabel) +
theme_void()
knitr::opts_chunk$set(echo = TRUE)
ggplot(arrange(providerComp, perProv, desc = TRUE), aes(x = "", y = numProv, fill = Provlabel)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
# geom_text(aes(label = paste0(perProv, "%")), color = "black", vjust = 0.2) +
labs(title = "Percent of provider organizations by classification", fill = "Provider Type") +
scale_fill_manual(values = c(wes_palettes$Darjeeling1, wes_palettes$Darjeeling2), limits = providerComp %>% arrange(perProv, desc = TRUE) %>% .$Provlabel) +
theme_void()
?arrange
knitr::opts_chunk$set(echo = TRUE)
ggplot(arrange(providerComp, -perProv), aes(x = "", y = numProv, fill = Provlabel)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
# geom_text(aes(label = paste0(perProv, "%")), color = "black", vjust = 0.2) +
labs(title = "Percent of provider organizations by classification", fill = "Provider Type") +
scale_fill_manual(values = c(wes_palettes$Darjeeling1, wes_palettes$Darjeeling2), limits = providerComp %>% arrange(-perProv) %>% .$Provlabel) +
theme_void()
knitr::opts_chunk$set(echo = TRUE)
ggplot(arrange(providerComp, -perSites), aes(x = "", y = numSites, fill = Siteslabel)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(title = "Percent of monitoring sites by provider organization classification", fill = "Provider Type") +
scale_fill_manual(values = c(wes_palettes$Darjeeling1, wes_palettes$Darjeeling2), limits = providerComp %>% arrange(-perSites) %>% .$Siteslabel) +
theme_void()
head(providerComp)
knitr::opts_chunk$set(echo = TRUE)
ggplot(arrange(providerComp, -perSites), aes(x = "", y = numSites, fill = Sitelabel)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(title = "Percent of monitoring sites by provider organization classification", fill = "Provider Type") +
scale_fill_manual(values = c(wes_palettes$Darjeeling1, wes_palettes$Darjeeling2), limits = providerComp %>% arrange(-perSites) %>% .$Sitelabel) +
theme_void()
knitr::opts_chunk$set(echo = TRUE)
ggplot(arrange(providerComp, -perProv), aes(x = "", y = numProv, fill = Provlabel)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
# geom_text(aes(label = paste0(perProv, "%")), color = "black", vjust = 0.2) +
labs(title = "Percent of provider organizations by classification", fill = "Provider Type") +
scale_fill_manual(values = c(wes_palettes$Darjeeling1, wes_palettes$Darjeeling2), limits = providerComp %>% arrange(-perSites) %>% .$Sitelabel) +
theme_void()
scale_fill_manual()
?scale_fill_manual
arrange(providerComp, -perSites)
arrange(providerComp, -perSites) %>% .$Sitelabel
knitr::opts_chunk$set(echo = TRUE)
ggplot(arrange(providerComp, -perSites), aes(x = "", y = numSites, fill = Sitelabel)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(title = "Percent of monitoring sites by provider organization classification", fill = "Provider Type") +
scale_fill_manual(c("state - 73.74%","municipal - 9.3%","tribal - 4.38%","academic - 4.07%",
"NGO - 3.86%", "federal - 2.39%", "Not Yet Classified - 1.96%", "private - 0.3%"),
values = c(wes_palettes$Darjeeling1, wes_palettes$Darjeeling2)) +
theme_void()
?guide_legend
?guide_colorbar
?scale_fill_continuous
knitr::opts_chunk$set(echo = TRUE)
PopMonByState.map <- ggplot(PopMonByState.sf) +
geom_sf(aes(fill = perPpl), size = 0.1) +
coord_sf(xlim = c(-180, -60), ylim = c(20, 72)) +
labs(title = "Monitored population by state",
fill = "Percent of population living in monitored subwatersheds") +
scale_fill_gradient(limits=c(0, 100))
PopMonByState.map
knitr::opts_chunk$set(echo = TRUE)
PopMonByState.map <- ggplot(PopMonByState.sf) +
geom_sf(aes(fill = perPpl), size = 0.1) +
coord_sf(xlim = c(-180, -60), ylim = c(20, 72)) +
labs(title = "Monitored population by state",
fill = "Percent of population living in monitored subwatersheds") +
scale_fill_gradient2(limits=c(0, 100))
PopMonByState.map
knitr::opts_chunk$set(echo = TRUE)
PopMonByState.map <- ggplot(PopMonByState.sf) +
geom_sf(aes(fill = perPpl), size = 0.1) +
coord_sf(xlim = c(-180, -60), ylim = c(20, 72)) +
labs(title = "Monitored population by state",
fill = "Percent of population living in monitored subwatersheds") +
scale_fill_gradient3(limits=c(0, 100))
knitr::opts_chunk$set(echo = TRUE)
PopMonByState.map <- ggplot(PopMonByState.sf) +
geom_sf(aes(fill = perPpl), size = 0.1) +
coord_sf(xlim = c(-180, -60), ylim = c(20, 72)) +
labs(title = "Monitored population by state",
fill = "Percent of population living in monitored subwatersheds") +
scale_fill_gradient(limits=c(0, 100), type = "viridis")
knitr::opts_chunk$set(echo = TRUE)
PopMonByState.map <- ggplot(PopMonByState.sf) +
geom_sf(aes(fill = perPpl), size = 0.1) +
coord_sf(xlim = c(-180, -60), ylim = c(20, 72)) +
labs(title = "Monitored population by state",
fill = "Percent of population living in monitored subwatersheds") +
scale_fill_gradient(limits=c(0, 100))
PopMonByState.map
knitr::opts_chunk$set(echo = TRUE)
PopMonByState.map <- ggplot(PopMonByState.sf) +
geom_sf(aes(fill = perPpl), size = 0.1) +
coord_sf(xlim = c(-180, -60), ylim = c(20, 72)) +
labs(title = "Monitored population by state",
fill = "Percent of population living in monitored subwatersheds") +
scale_fill_gradient(low = "oldlace", mid = "goldenrod", high = "darkslategrey",
limits=c(0, 100))
knitr::opts_chunk$set(echo = TRUE)
PopMonByState.map <- ggplot(PopMonByState.sf) +
geom_sf(aes(fill = perPpl), size = 0.1) +
coord_sf(xlim = c(-180, -60), ylim = c(20, 72)) +
labs(title = "Monitored population by state",
fill = "Percent of population living in monitored subwatersheds") +
scale_fill_gradient(low = "oldlace", high = "darkslategrey",
limits=c(0, 100))
PopMonByState.map
knitr::opts_chunk$set(echo = TRUE)
PopMonByState.map <- ggplot(PopMonByState.sf) +
geom_sf(aes(fill = perPpl), size = 0.1) +
coord_sf(xlim = c(-180, -60), ylim = c(20, 72)) +
labs(title = "Monitored population by state",
fill = "Percent of population living in monitored subwatersheds") +
scale_fill_gradient(low = "oldlace", high = "deepskyblue",
limits=c(0, 100))
PopMonByState.map
knitr::opts_chunk$set(echo = TRUE)
PopMonByState.map <- ggplot(PopMonByState.sf) +
geom_sf(aes(fill = perPpl), size = 0.1) +
coord_sf(xlim = c(-180, -60), ylim = c(20, 72)) +
labs(title = "Monitored population by state",
fill = "Percent of population living in monitored subwatersheds") +
scale_fill_gradient(low = "oldlace", high = "dodgerblue4",
limits=c(0, 100))
PopMonByState.map
knitr::opts_chunk$set(echo = TRUE)
PopMonByState.map <- ggplot(PopMonByState.sf) +
geom_sf(aes(fill = perPpl), size = 0.1) +
coord_sf(xlim = c(-180, -60), ylim = c(20, 72)) +
labs(title = "Monitored population by state",
fill = "Percent of population living in monitored subwatersheds") +
scale_fill_gradient(low = "goldenrod", high = "dodgerblue4",
limits=c(0, 100))
PopMonByState.map
knitr::opts_chunk$set(echo = TRUE)
PopMonByState.map <- ggplot(PopMonByState.sf) +
geom_sf(aes(fill = perPpl), size = 0.1) +
coord_sf(xlim = c(-180, -60), ylim = c(20, 72)) +
labs(title = "Monitored population by state",
fill = "Percent of population living in monitored subwatersheds") +
scale_fill_gradient(low = "oldlace", high = "dodgerblue4",
limits=c(0, 100))
PopMonByState.map
knitr::opts_chunk$set(echo = TRUE)
PopMonByRegion.map <- ggplot(PopMonByRegion.sf ) +
geom_sf(aes(fill = perPpl), size = 0.1) +
coord_sf(xlim = c(-180, -60), ylim = c(20, 72)) +
labs(title = "Monitored population by EPA Region",
fill = "Percent of population living in monitored subwatersheds") +
scale_fill_gradient(low = "oldlace", high = "dodgerblue4",
limits=c(0, 100))
PopMonByRegion.map
knitr::opts_chunk$set(echo = TRUE)
raceMonitoredHUCS.plot <- ggplot(raceMonitoredHUCS,
aes(x = monitrd, y = population, fill = Race)) +
geom_bar(stat = "identity", positon = "fill") +
scale_x_discrete(limits = c("monitored", "unmonitored")) +
scale_fill_manual(limits = c("Asian", "Black", "Native American",
"Pacific Islander", "White", "Other",
"Multiple Races"),
values = c(wes_palettes$Royal1, wes_palettes$Cavalcanti1)) +
labs(title = "Racial compositon of population living within \nmonitored and unmonitored subwatersheds",
x = "", y = "Population") +
theme(legend.title = element_blank(), legend.position = "right") +
guides(fill = guide_legend(byrow = TRUE))
raceMonitoredHUCS.plot
knitr::opts_chunk$set(echo = TRUE)
raceMonitoredHUCS.plot <- ggplot(raceMonitoredHUCS,
aes(x = monitrd, y = population, fill = Race)) +
geom_col(positon = "fill") +
#geom_bar(stat = "identity") +
scale_x_discrete(limits = c("monitored", "unmonitored")) +
scale_fill_manual(limits = c("Asian", "Black", "Native American",
"Pacific Islander", "White", "Other",
"Multiple Races"),
values = c(wes_palettes$Royal1, wes_palettes$Cavalcanti1)) +
labs(title = "Racial compositon of population living within \nmonitored and unmonitored subwatersheds",
x = "", y = "Population") +
theme(legend.title = element_blank(), legend.position = "right") +
guides(fill = guide_legend(byrow = TRUE))
raceMonitoredHUCS.plot
raceMonitoredHUCS.plot <- ggplot(raceMonitoredHUCS,
aes(x = monitrd, y = population, fill = Race)) +
geom_col(positon = "fill") +
#geom_bar(stat = "identity") +
scale_x_discrete(limits = c("monitored", "unmonitored")) +
scale_fill_manual(limits = c("Asian", "Black", "Native American",
"Pacific Islander", "White", "Other",
"Multiple Races"),
values = c(wes_palettes$Royal1, wes_palettes$Cavalcanti1)) +
labs(title = "Racial compositon of population living within \nmonitored and unmonitored subwatersheds",
x = "", y = "Population") +
theme(legend.title = element_blank(), legend.position = "right") +
guides(fill = guide_legend(byrow = TRUE))
raceMonitoredHUCS.plot
ggplot(raceMonitoredHUCS,
aes(x = monitrd, y = population, fill = Race)) +
geom_col(positon = "fill")
knitr::opts_chunk$set(echo = TRUE)
raceMonitoredHUCS.plot <- ggplot(raceMonitoredHUCS,
aes(x = monitrd, y = population, fill = Race)) +
geom_col(position = "fill") +
#geom_bar(stat = "identity") +
scale_x_discrete(limits = c("monitored", "unmonitored")) +
scale_fill_manual(limits = c("Asian", "Black", "Native American",
"Pacific Islander", "White", "Other",
"Multiple Races"),
values = c(wes_palettes$Royal1, wes_palettes$Cavalcanti1)) +
labs(title = "Racial compositon of population living within \nmonitored and unmonitored subwatersheds",
x = "", y = "Population") +
theme(legend.title = element_blank(), legend.position = "right") +
guides(fill = guide_legend(byrow = TRUE))
raceMonitoredHUCS.plot
knitr::opts_chunk$set(echo = TRUE)
raceMonitoredHUCS.plot <- ggplot(raceMonitoredHUCS,
aes(x = monitrd, y = population, fill = Race)) +
geom_col(position = "fill") +
#geom_bar(stat = "identity") +
scale_x_discrete(limits = c("monitored", "unmonitored")) +
scale_fill_manual(limits = c("Asian", "Black", "Native American",
"Pacific Islander", "White", "Other",
"Multiple Races"),
values = c(wes_palettes$Royal1, wes_palettes$Cavalcanti1)) +
scale_y_continuous(labels = scales::percent) +
labs(title = "Racial compositon of population living within \nmonitored and unmonitored subwatersheds",
x = "", y = "% of population") +
theme(legend.title = element_blank(), legend.position = "right") +
guides(fill = guide_legend(byrow = TRUE))
raceMonitoredHUCS.plot
knitr::opts_chunk$set(echo = TRUE)
raceMonitoredHUCS.plot <- ggplot(raceMonitoredHUCS,
aes(x = monitrd, y = population, fill = Race)) +
geom_col(position = "fill") +
#geom_bar(stat = "identity") +
scale_x_discrete(limits = c("monitored", "unmonitored")) +
scale_fill_manual(limits = c("Asian", "Black", "Native American",
"Pacific Islander", "White", "Other",
"Multiple Races"),
values = c(wes_palettes$Royal1, wes_palettes$Cavalcanti1)) +
scale_y_continuous(labels = scales::percent) +
labs(title = "Racial compositon of population living within \nmonitored and unmonitored subwatersheds",
x = "", y = "Percent of population") +
theme(legend.title = element_blank(), legend.position = "right") +
guides(fill = guide_legend(byrow = TRUE))
raceMonitoredHUCS.plot
# Provider groups as percent of total providers, percent of sites, and percent of instances
# Overall percent of providers, sites, and instances
providerComp <- sites.df %>% group_by(OrganizationTypeClassification) %>%
summarise(numProv = n_distinct(OrganizationIdentifier),
numSites = n_distinct(MonitoringLocationIdentifier),
numInstances = sum(MonitoringInstances))
providerComp <- providerComp %>% mutate(perProv = round(numProv*100/sum(numProv), 2),
perSites = round(numSites*100/sum(numSites), 2),
perInstances = round(numInstances*100/sum(numInstances), 2)) %>%
arrange(desc(numSites)) %>%
mutate(Provlabel = paste0(OrganizationTypeClassification, " - ", perProv, "%"),
Sitelabel = paste0(OrganizationTypeClassification, " - ", perSites, "%"),
Inslabel = paste0(OrganizationTypeClassification, " - ", perInstances, "%"))
#Loop through and report out
print(providerComp[, c(1, 5:7)])
provClasses <- unique(providerComp$OrganizationTypeClassification)
for(i in 1:length(provClasses)) {
classOfInt <- provClasses[i]
recOfInt <- providerComp %>% filter(OrganizationTypeClassification == classOfInt)
print(paste0(recOfInt$perProv, "% of data providers are ", classOfInt,
" organizations, responsible for providing data for ",
recOfInt$perSites, "% of monitoring sites and ",
recOfInt$perInstances, "% of monitoring instances."))
}
ggplot(providerComp, aes(x = "", y = numProv, fill = OrganizationTypeClassification)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
# geom_text(aes(label = paste0(perProv, "%")), color = "black", vjust = 0.2) +
labs(title = "Percent of provider organizations by classification", fill = "Provider Type") +
scale_fill_manual(values = c(wes_palettes$Darjeeling1, wes_palettes$Darjeeling2), limits = provClasses) +
guides()
theme_void()
ggplot(providerComp, aes(x = "", y = numSites, fill = OrganizationTypeClassification)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(title = "Percent of monitoring sites by provider organization classification", fill = "Provider Type") +
scale_fill_manual(values = c(wes_palettes$Darjeeling1, wes_palettes$Darjeeling2), limits = provClasses) +
theme_void()
ggplot(providerComp, aes(x = "", y = numInstances, fill = OrganizationTypeClassification)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(title = "Percent of monitoring instances by provider organization classification", fill = "Provider Type") +
scale_fill_manual(values = c(wes_palettes$Darjeeling1, wes_palettes$Darjeeling2), limits = provClasses) +
theme_void()
# By state - bar chart of percent of sites
ProvCompByState <- sites.df %>% group_by(StateAbb, OrganizationTypeClassification) %>%
summarise(numSites = n_distinct(MonitoringLocationIdentifier, na.rm = TRUE),
numInstances = sum(MonitoringInstances, na.rm = TRUE)) %>%
mutate(perSites = round(numSites*100/sum(numSites), 2),
perInstances = round(numInstances*100/sum(numInstances), 2))
ProvCompByState.plot <- ggplot(ProvCompByState,
aes(y = numSites, x = StateAbb, fill = OrganizationTypeClassification)) +
geom_bar(stat = "identity") +
scale_x_discrete(limits = stateAbbOrder) +
scale_fill_manual(values = c(wes_palettes$Darjeeling1, wes_palettes$Darjeeling2),
limits = provClasses) +
labs(title = "Data provider source by state", x = "State",
y = "Number of Monitoring Sites", fill = "Provider classification") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.2, hjust = 1), legend.position = "right")
ProvCompByState.plot
# By EPA Region - bar chart of percent of sites
ProvCompByRegion <- sites.df %>% group_by(EPARegion, OrganizationTypeClassification) %>%
summarise(numSites = n_distinct(MonitoringLocationIdentifier, na.rm = TRUE),
numInstances = sum(MonitoringInstances, na.rm = TRUE)) %>%
mutate(perSites = round(numSites*100/sum(numSites), 2),
perInstances = round(numInstances*100/sum(numInstances), 2))
ProvCompByRegion.plot <- ggplot(ProvCompByRegion,
aes(y = numSites, x = EPARegion, fill = OrganizationTypeClassification)) +
geom_bar(stat = "identity") +
scale_x_discrete(limits = EPARegionOrder) +
scale_fill_manual(values = c(wes_palettes$Darjeeling1, wes_palettes$Darjeeling2),
limits = provClasses) +
labs(title = "Data provider source by EPA Region", x = "EPA Region",
y = "Number of Monitoring Sites", fill = "Provider classification") +
theme(axis.text.x = element_text(angle = 45, vjust = 0.7), legend.position = "right")
ProvCompByRegion.plot
knitr::opts_chunk$set(echo = TRUE)
# Provider groups as percent of total providers, percent of sites, and percent of instances
# Overall percent of providers, sites, and instances
providerComp <- sites.df %>% group_by(OrganizationTypeClassification) %>%
summarise(numProv = n_distinct(OrganizationIdentifier),
numSites = n_distinct(MonitoringLocationIdentifier),
numInstances = sum(MonitoringInstances))
providerComp <- providerComp %>% mutate(perProv = round(numProv*100/sum(numProv), 2),
perSites = round(numSites*100/sum(numSites), 2),
perInstances = round(numInstances*100/sum(numInstances), 2)) %>%
arrange(desc(numSites)) %>%
mutate(Provlabel = paste0(OrganizationTypeClassification, " - ", perProv, "%"),
Sitelabel = paste0(OrganizationTypeClassification, " - ", perSites, "%"),
Inslabel = paste0(OrganizationTypeClassification, " - ", perInstances, "%"))
#Loop through and report out
print(providerComp[, c(1, 5:7)])
provClasses <- unique(providerComp$OrganizationTypeClassification)
for(i in 1:length(provClasses)) {
classOfInt <- provClasses[i]
recOfInt <- providerComp %>% filter(OrganizationTypeClassification == classOfInt)
print(paste0(recOfInt$perProv, "% of data providers are ", classOfInt,
" organizations, responsible for providing data for ",
recOfInt$perSites, "% of monitoring sites and ",
recOfInt$perInstances, "% of monitoring instances."))
}
ggplot(providerComp, aes(x = "", y = numProv, fill = OrganizationTypeClassification)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
# geom_text(aes(label = paste0(perProv, "%")), color = "black", vjust = 0.2) +
labs(title = "Percent of provider organizations by classification", fill = "Provider Type") +
scale_fill_manual(values = c(wes_palettes$Darjeeling1, wes_palettes$Darjeeling2), limits = provClasses) +
theme_void()
ggplot(providerComp, aes(x = "", y = numSites, fill = OrganizationTypeClassification)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(title = "Percent of monitoring sites by provider organization classification", fill = "Provider Type") +
scale_fill_manual(values = c(wes_palettes$Darjeeling1, wes_palettes$Darjeeling2), limits = provClasses) +
theme_void()
ggplot(providerComp, aes(x = "", y = numInstances, fill = OrganizationTypeClassification)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(title = "Percent of monitoring instances by provider organization classification", fill = "Provider Type") +
scale_fill_manual(values = c(wes_palettes$Darjeeling1, wes_palettes$Darjeeling2), limits = provClasses) +
theme_void()
# By state - bar chart of percent of sites
ProvCompByState <- sites.df %>% group_by(StateAbb, OrganizationTypeClassification) %>%
summarise(numSites = n_distinct(MonitoringLocationIdentifier, na.rm = TRUE),
numInstances = sum(MonitoringInstances, na.rm = TRUE)) %>%
mutate(perSites = round(numSites*100/sum(numSites), 2),
perInstances = round(numInstances*100/sum(numInstances), 2))
ProvCompByState.plot <- ggplot(ProvCompByState,
aes(y = numSites, x = StateAbb, fill = OrganizationTypeClassification)) +
geom_bar(stat = "identity") +
scale_x_discrete(limits = stateAbbOrder) +
scale_fill_manual(values = c(wes_palettes$Darjeeling1, wes_palettes$Darjeeling2),
limits = provClasses) +
labs(title = "Data provider source by state", x = "State",
y = "Number of Monitoring Sites", fill = "Provider classification") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.2, hjust = 1), legend.position = "right")
ProvCompByState.plot
# By EPA Region - bar chart of percent of sites
ProvCompByRegion <- sites.df %>% group_by(EPARegion, OrganizationTypeClassification) %>%
summarise(numSites = n_distinct(MonitoringLocationIdentifier, na.rm = TRUE),
numInstances = sum(MonitoringInstances, na.rm = TRUE)) %>%
mutate(perSites = round(numSites*100/sum(numSites), 2),
perInstances = round(numInstances*100/sum(numInstances), 2))
ProvCompByRegion.plot <- ggplot(ProvCompByRegion,
aes(y = numSites, x = EPARegion, fill = OrganizationTypeClassification)) +
geom_bar(stat = "identity") +
scale_x_discrete(limits = EPARegionOrder) +
scale_fill_manual(values = c(wes_palettes$Darjeeling1, wes_palettes$Darjeeling2),
limits = provClasses) +
labs(title = "Data provider source by EPA Region", x = "EPA Region",
y = "Number of Monitoring Sites", fill = "Provider classification") +
theme(axis.text.x = element_text(angle = 45, vjust = 0.7), legend.position = "right")
ProvCompByRegion.plot
